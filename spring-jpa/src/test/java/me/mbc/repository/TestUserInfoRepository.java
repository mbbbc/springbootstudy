package me.mbc.repository;import me.mbc.entity.UserInfoEntity;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Qualifier;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.data.jpa.domain.Specification;import org.springframework.lang.Nullable;import org.springframework.test.context.junit4.SpringRunner;import javax.persistence.criteria.CriteriaBuilder;import javax.persistence.criteria.CriteriaQuery;import javax.persistence.criteria.Predicate;import javax.persistence.criteria.Root;import java.util.ArrayList;import java.util.List;@RunWith(SpringRunner.class)@SpringBootTestpublic class TestUserInfoRepository {    @Autowired    UserInfoRepository userInfoRepository;    @Test    public void test1() {        UserInfoEntity userInfoEntity = new UserInfoEntity();        userInfoEntity.setTelephone("5645341").setVersion("1");        List<UserInfoEntity> all = userInfoRepository.findAll((root, query, cb) -> {            List<Predicate> list = new ArrayList<Predicate>();            list.add(cb.equal(root.get(UserInfoEntity.Fields.version), userInfoEntity.getVersion()));            list.add(cb.like(root.get(UserInfoEntity.Fields.telephone), userInfoEntity.getTelephone()));            return query.where(list.toArray(new Predicate[list.size()])).getRestriction();        });        all.forEach(System.out::println);    }}