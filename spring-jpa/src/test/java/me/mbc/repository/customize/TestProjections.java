package me.mbc.repository.customize;import me.mbc.entity.customize.Address;import me.mbc.entity.customize.Admin;import me.mbc.vo.AddressELVo;import me.mbc.vo.AddressVo;import me.mbc.vo.AdminAddress;import me.mbc.vo.AdminAddressDto;import org.junit.Test;import org.junit.runner.RunWith;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.test.context.junit4.SpringRunner;import java.util.Optional;@RunWith(SpringRunner.class)@SpringBootTestpublic class TestProjections {    @Autowired    AddressJpaRepository addressJpaRepository;    @Autowired    AdminRepository adminRepository;    //@Before    public void saveAddress(){        Optional<Admin> admin = adminRepository.findById(1L);        if(admin.isPresent()){            Address address = new Address()                    .setAdmin(admin.get())                    .setLocation("广州市xxx");            addressJpaRepository.save(address);        }    }    /**     * 1.通过接口接收结果     */    @Test    public void testProjectionsByInterface(){        Optional<AddressVo> addressVo= addressJpaRepository.findAddressById(1L);        if(addressVo.isPresent()){            AddressVo vo = addressVo.get();            System.out.println("---------------------");            System.out.println(vo.getAdminId());            System.out.println(vo.getLocation());            System.out.println(vo.getCreateDate());            System.out.println(vo.getAdmin().getName());            System.out.println(vo.getAdmin().getBirthDate());            System.out.println(vo.getAdmin().getCreateDate());            System.out.println("---------------------");        }    }    /**     * 2.测试@Value 和 SPEL     */    @Test    public void testProjectionsUseSPEL(){        Optional<AddressELVo> addressELVo= addressJpaRepository.findAdminAddressById(1L);        if(addressELVo.isPresent()){            System.out.println("---------------------");            System.out.println(addressELVo.get().getAdminAddress());            System.out.println("---------------------");        }    }    /**     * 3. powerful SPLE Support     */    @Test    public void testProjectionsSPELSupport(){        Optional<AdminAddress> AdminAddress= addressJpaRepository.findAdminAddressSpelById(1L);        if(AdminAddress.isPresent()){            System.out.println("---------------------");            System.out.println(AdminAddress.get().getAdminAddress());            System.out.println("---------------------");        }    }    /**     * 4.使用类来接收，类中需要有相应的构造函数！！！！     */    @Test    public void testProjectionsByDto(){        Optional<AdminAddressDto> AdminAddress= addressJpaRepository.findAdminAddressDtoById(1L);        if(AdminAddress.isPresent()){            System.out.println("---------------------");            System.out.println(AdminAddress.get());            System.out.println("---------------------");        }    }    /**     *5.动态 Projections，通过泛化     */    @Test    public void testDiffResultProjections(){        Optional<AdminAddressDto> adminAddressDto = addressJpaRepository.findById(1L, AdminAddressDto.class);        if(adminAddressDto.isPresent()){            System.out.println("---------------------");            System.out.println(adminAddressDto.get());            System.out.println("---------------------");        }        System.out.println("****************************");        Optional<Address> address = addressJpaRepository.findById(1L, Address.class);        if(address.isPresent()){            System.out.println("---------------------");            System.out.println(address.get());            System.out.println("---------------------");        }        System.out.println("****************************");    }}